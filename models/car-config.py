# generated by datamodel-codegen:
#   filename:  ors-config.driving-car.json
#   timestamp: 2024-03-11T13:45:16+00:00

from __future__ import annotations

from typing import Any, Dict, List, Optional

from pydantic import BaseModel, Field


class Astar(BaseModel):
    approximation: Optional[str] = None
    epsilon: Optional[int] = None


class Borders(BaseModel):
    boundaries: Optional[str] = None
    ids: Optional[str] = None
    openborders: Optional[str] = None


class Ch(BaseModel):
    enabled: Optional[bool] = None
    threads: Optional[int] = None
    weightings: Optional[str] = None


class Ch1(BaseModel):
    disabling_allowed: Optional[bool] = None


class Condition(BaseModel):
    request_service: Optional[str] = None
    request_preference: Optional[str] = None


class Core(BaseModel):
    enabled: Optional[bool] = None
    threads: Optional[int] = None
    weightings: Optional[str] = None
    landmarks: Optional[int] = None
    lmsets: Optional[str] = None


class Core1(BaseModel):
    disabling_allowed: Optional[bool] = None
    active_landmarks: Optional[int] = None


class DefaultParams(BaseModel):
    encoder_flags_size: Optional[int] = None
    graphs_root_path: Optional[str] = None
    elevation_provider: Optional[str] = None
    elevation_cache_path: Optional[str] = None
    elevation_clear_cache: Optional[bool] = None
    elevation_smoothing: Optional[bool] = None
    instructions: Optional[bool] = None
    maximum_distance: Optional[int] = None
    maximum_distance_dynamic_weights: Optional[int] = None
    maximum_distance_avoid_areas: Optional[int] = None
    maximum_avoid_polygon_area: Optional[int] = None
    maximum_avoid_polygon_extent: Optional[int] = None
    maximum_distance_alternative_routes: Optional[int] = None
    maximum_alternative_routes: Optional[int] = None
    maximum_distance_round_trip_routes: Optional[int] = None
    maximum_waypoints: Optional[int] = None
    maximum_snapping_radius: Optional[int] = None


class Execution(BaseModel):
    methods: Optional[Methods1] = None


class ExtStorages(BaseModel):
    WayCategory: Optional[Dict[str, Any]] = None
    WaySurfaceType: Optional[Dict[str, Any]] = None
    Tollways: Optional[Dict[str, Any]] = None
    Borders: Optional[Borders] = None
    RoadAccessRestrictions: Optional[RoadAccessRestrictions] = None


class Info(BaseModel):
    base_url: Optional[str] = None
    support_mail: Optional[str] = None
    author_tag: Optional[str] = None
    content_licence: Optional[str] = None


class Isochrones(BaseModel):
    maximum_range_distance: Optional[List[MaximumRangeDistanceItem]] = None
    maximum_range_time: Optional[List[MaximumRangeTimeItem]] = None
    maximum_intervals: Optional[int] = None
    maximum_locations: Optional[int] = None
    allow_compute_area: Optional[bool] = None
    statistics_providers: Optional[StatisticsProviders] = None
    attribution: Optional[str] = None


class Logging(BaseModel):
    enabled: Optional[bool] = None
    level_file: Optional[str] = None
    location: Optional[str] = None
    stdout: Optional[bool] = None


class Matrix(BaseModel):
    enabled: Optional[bool] = None
    maximum_routes: Optional[int] = None
    maximum_routes_flexible: Optional[int] = None
    maximum_visited_nodes: Optional[int] = None
    allow_resolve_locations: Optional[bool] = None
    attribution: Optional[str] = None


class MaximumRangeDistanceItem(BaseModel):
    profiles: Optional[str] = None
    value: Optional[int] = None


class MaximumRangeTimeItem(MaximumRangeDistanceItem):
    pass


class Methods(BaseModel):
    ch: Optional[Ch] = None
    core: Optional[Core] = None


class Methods1(BaseModel):
    astar: Optional[Astar] = None
    ch: Optional[Ch1] = None
    core: Optional[Core1] = None


class Ors(BaseModel):
    info: Optional[Info] = None
    services: Optional[Services] = None
    logging: Optional[Logging] = None
    system_message: Optional[List[SystemMessageItem]] = None


class OrsConfigJSON(BaseModel):
    ors: Optional[Ors] = None


class Parameters(BaseModel):
    encoder_options: Optional[str] = None
    elevation: Optional[bool] = None
    preparation: Optional[Preparation] = None
    execution: Optional[Execution] = None
    ext_storages: Optional[ExtStorages] = None


class Preparation(BaseModel):
    min_network_size: Optional[int] = None
    min_one_way_network_size: Optional[int] = None
    methods: Optional[Methods] = None


class ProfileDrivingCar(BaseModel):
    profiles: Optional[str] = None
    parameters: Optional[Parameters] = None


class Profiles(BaseModel):
    active: Optional[List[str]] = None
    default_params: Optional[DefaultParams] = None
    profile_driving_car: Optional[ProfileDrivingCar] = Field(
        None, alias='profile-driving-car'
    )


class PropertyMapping(BaseModel):
    total_pop: Optional[str] = None


class Provider1(BaseModel):
    enabled: Optional[bool] = None
    provider_name: Optional[str] = None
    provider_parameters: Optional[ProviderParameters] = None
    property_mapping: Optional[PropertyMapping] = None
    attribution: Optional[str] = None


class ProviderParameters(BaseModel):
    host: Optional[str] = None
    port: Optional[int] = None
    db_name: Optional[str] = None
    user: Optional[str] = None
    password: Optional[str] = None
    table_name: Optional[str] = None
    geometry_column: Optional[str] = None
    postgis_version: Optional[str] = None


class RoadAccessRestrictions(BaseModel):
    use_for_warnings: Optional[bool] = None


class Routing(BaseModel):
    mode: Optional[str] = None
    routing_description: Optional[str] = None
    routing_name: Optional[str] = None
    sources: Optional[List[str]] = None
    elevation_preprocessed: Optional[bool] = None
    init_threads: Optional[int] = None
    distance_approximation: Optional[bool] = None
    storage_format: Optional[str] = None
    attribution: Optional[str] = None
    profiles: Optional[Profiles] = None


class Services(BaseModel):
    isochrones: Optional[Isochrones] = None
    matrix: Optional[Matrix] = None
    routing: Optional[Routing] = None


class StatisticsProviders(BaseModel):
    provider1: Optional[Provider1] = None


class SystemMessageItem(BaseModel):
    active: Optional[bool] = None
    text: Optional[str] = None
    condition: Optional[Condition] = None
